{"version":3,"sources":["../app/app.js"],"names":["ErrorHandle","express","require","path","cookieParser","bodyParser","log4js","log","getLogger","app","use","connectLogger","level","levels","INFO","format","json","urlencoded","extended","static","join","__dirname","req","res","next","header","err","Error","status","get","DevErrorHandle","ProdErrorHandle","module","exports"],"mappings":"AAAA;;AASA;;;;AACA;;IAAYA,W;;;;;;AATZ,IAAIC,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;AACA,IAAIE,eAAeF,QAAQ,eAAR,CAAnB;AACA,IAAIG,aAAaH,QAAQ,aAAR,CAAjB;AACA,IAAII,SAASJ,QAAQ,QAAR,CAAb;AACA,IAAIK,MAAMD,OAAOE,SAAP,CAAiB,SAAjB,CAAV;;AAMA,IAAIC,MAAMR,SAAV;;AAEAQ,IAAIC,GAAJ,CAAQJ,OAAOK,aAAP,CAAqBL,OAAOE,SAAP,CAAiB,MAAjB,CAArB,EAA+C,EAAEI,OAAON,OAAOO,MAAP,CAAcC,IAAvB,EAA6BC,QAAQ,cAArC,EAA/C,CAAR;AACAN,IAAIC,GAAJ,CAAQN,cAAR;AACAK,IAAIC,GAAJ,CAAQL,WAAWW,IAAX,EAAR;AACAP,IAAIC,GAAJ,CAAQL,WAAWY,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAT,IAAIC,GAAJ,CAAQT,QAAQkB,MAAR,CAAehB,KAAKiB,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AACAZ,IAAIC,GAAJ,CAAQ,UAACY,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAmB;AACzBD,MAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,gDAA3C;AACAD;AACD,CAJD;;AAMAf,IAAIC,GAAJ,CAAQ,uBAAR;;AAEA;AACAD,IAAIC,GAAJ,CAAQ,UAAUY,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAChC,MAAIE,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAV;AACAD,MAAIE,MAAJ,GAAa,GAAb;AACAJ,OAAKE,GAAL;AACD,CAJD;;AAMA;;AAEA,IAAIjB,IAAIoB,GAAJ,CAAQ,KAAR,MAAmB,aAAvB,EAAsC;AACpCpB,MAAIC,GAAJ,CAAQV,YAAY8B,cAApB;AACD;AACDrB,IAAIC,GAAJ,CAAQV,YAAY+B,eAApB;;AAGAC,OAAOC,OAAP,GAAiBxB,GAAjB","file":"app.js","sourcesContent":["'use strict';\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\nvar log4js = require('log4js');\nvar log = log4js.getLogger(\"startup\");\n\n\nimport SearchController from './controller/search-controller';\nimport * as ErrorHandle from './util/error-handler';\n\nvar app = express();\n\napp.use(log4js.connectLogger(log4js.getLogger(\"http\"), { level: log4js.levels.INFO, format: ':method :url' }));\napp.use(cookieParser());\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(express.static(path.join(__dirname, 'public')));\napp.use((req, res, next)=> {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n  next();\n});\n\napp.use('/iheartcatalog/search', SearchController);\n\n// catch 404 and forward to error handler\napp.use(function (req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handlers\n\nif (app.get('env') === 'development') {\n  app.use(ErrorHandle.DevErrorHandle);\n}\napp.use(ErrorHandle.ProdErrorHandle);\n\n\nmodule.exports = app;"]}